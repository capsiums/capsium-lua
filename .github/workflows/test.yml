name: Test Capsium Nginx Extension

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Test with OpenResty
    runs-on: ubuntu-latest

    strategy:
      matrix:
        openresty-version:
          - 'alpine-fat'
          - 'alpine'
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install test dependencies
        run: |
          pip install -r tests/requirements.txt

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: capsium-nginx:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BASE_IMAGE=openresty/openresty:${{ matrix.openresty-version }}

      - name: Run tests
        run: |
          python -m pytest tests/ -v --html=test-report.html --self-contained-html

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report-openresty-${{ matrix.openresty-version }}
          path: test-report.html
          retention-days: 30

      - name: Test summary
        if: always()
        run: |
          echo "## Test Results for OpenResty ${{ matrix.openresty-version }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f test-report.html ]; then
            echo "✅ Tests completed. Check artifacts for detailed report." >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Tests failed to generate report." >> $GITHUB_STEP_SUMMARY
          fi

  integration-test:
    name: Integration Test - Multiple Packages
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install test dependencies
        run: |
          pip install -r tests/requirements.txt

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: capsium-nginx:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create additional test package
        run: |
          mkdir -p test/fixtures/multi-package-test
          echo '{"name": "multi-test", "version": "1.0.0"}' > test/fixtures/multi-package-test/manifest.json
          echo '{"name": "multi-test", "version": "1.0.0"}' > test/fixtures/multi-package-test/metadata.json
          echo '{"routes": {"/": {"target": {"file": "index.html"}}}}' > test/fixtures/multi-package-test/routes.json
          mkdir -p test/fixtures/multi-package-test/content
          echo '<html><body>Multi Package Test</body></html>' > test/fixtures/multi-package-test/content/index.html

      - name: Run integration tests
        run: |
          python -m pytest tests/test_config.py tests/test_packages.py -v --html=integration-report.html --self-contained-html

      - name: Upload integration test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-report
          path: integration-report.html
          retention-days: 30

      - name: Integration test summary
        if: always()
        run: |
          echo "## Integration Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Tested multiple package configurations:" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Custom mount paths" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Domain-based routing" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Per-package configuration" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Multiple packages served simultaneously" >> $GITHUB_STEP_SUMMARY
